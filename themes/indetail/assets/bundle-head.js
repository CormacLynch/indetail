/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 14);
/******/ })
/************************************************************************/
/******/ ({

/***/ 14:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(15);


/***/ }),

/***/ 15:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Head
 *
 * This file should only include basic environment setup logic and browser feature tests
 *
 * This should be included before the stylesheet so the browser doesn't need to reflow after adding the feature
 * detect classes from modernizer. Since this goes before the stylesheet this file should be placed inline into the html.
 *
 * Where possible this file should always be minified and obfuscated via `gulp prod`.
 *
 * BEWARE: This file and all dependencies of this file should not exceed 1.5kb or it will slow down every page
 * request as it can't be cached since it's inline and all.
 *
 */


__webpack_require__(16);

/***/ }),

/***/ 16:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*! modernizr 3.0.0 (Custom Build) | MIT *
 * http://modernizr.com/download/?-backgroundsize-borderradius-boxshadow-cssanimations-cssremunit-csstransitions-formvalidation-inputtypes-queryselector-sessionstorage-touchevents !*/
!function (e, t, n) {
  function i(e, t) {
    return (typeof e === 'undefined' ? 'undefined' : _typeof(e)) === t;
  }function r() {
    var e, t, n, r, o, s, a;for (var l in g) {
      if (e = [], t = g[l], t.name && (e.push(t.name.toLowerCase()), t.options && t.options.aliases && t.options.aliases.length)) for (n = 0; n < t.options.aliases.length; n++) {
        e.push(t.options.aliases[n].toLowerCase());
      }for (r = i(t.fn, 'function') ? t.fn() : t.fn, o = 0; o < e.length; o++) {
        s = e[o], a = s.split('.'), 1 === a.length ? Modernizr[a[0]] = r : (!Modernizr[a[0]] || Modernizr[a[0]] instanceof Boolean || (Modernizr[a[0]] = new Boolean(Modernizr[a[0]])), Modernizr[a[0]][a[1]] = r), C.push((r ? '' : 'no-') + a.join('-'));
      }
    }
  }function o(e) {
    var t = S.className,
        n = Modernizr._config.classPrefix || '';if (x && (t = t.baseVal), Modernizr._config.enableJSClass) {
      var i = new RegExp('(^|\\s)' + n + 'no-js(\\s|$)');t = t.replace(i, '$1' + n + 'js$2');
    }Modernizr._config.enableClasses && (t += ' ' + n + e.join(' ' + n), x ? S.className.baseVal = t : S.className = t);
  }function s() {
    return 'function' !== typeof t.createElement ? t.createElement(arguments[0]) : x ? t.createElementNS.call(t, 'http://www.w3.org/2000/svg', arguments[0]) : t.createElement.apply(t, arguments);
  }function a() {
    var e = t.body;return e || (e = s(x ? 'svg' : 'body'), e.fake = !0), e;
  }function l(e, n, i, r) {
    var o,
        l,
        u,
        d,
        f = 'modernizr',
        c = s('div'),
        p = a();if (parseInt(i, 10)) for (; i--;) {
      u = s('div'), u.id = r ? r[i] : f + (i + 1), c.appendChild(u);
    }return o = s('style'), o.type = 'text/css', o.id = 's' + f, (p.fake ? p : c).appendChild(o), p.appendChild(c), o.styleSheet ? o.styleSheet.cssText = e : o.appendChild(t.createTextNode(e)), c.id = f, p.fake && (p.style.background = '', p.style.overflow = 'hidden', d = S.style.overflow, S.style.overflow = 'hidden', S.appendChild(p)), l = n(c, e), p.fake ? (p.parentNode.removeChild(p), S.style.overflow = d, S.offsetHeight) : c.parentNode.removeChild(c), !!l;
  }function u(e, t) {
    return !!~('' + e).indexOf(t);
  }function d(e) {
    return e.replace(/([A-Z])/g, function (e, t) {
      return '-' + t.toLowerCase();
    }).replace(/^ms-/, '-ms-');
  }function f(t, i) {
    var r = t.length;if ('CSS' in e && 'supports' in e.CSS) {
      for (; r--;) {
        if (e.CSS.supports(d(t[r]), i)) return !0;
      }return !1;
    }if ('CSSSupportsRule' in e) {
      for (var o = []; r--;) {
        o.push('(' + d(t[r]) + ':' + i + ')');
      }return o = o.join(' or '), l('@supports (' + o + ') { #modernizr { position: absolute; } }', function (e) {
        return 'absolute' === getComputedStyle(e, null).position;
      });
    }return n;
  }function c(e) {
    return e.replace(/([a-z])-([a-z])/g, function (e, t, n) {
      return t + n.toUpperCase();
    }).replace(/^-/, '');
  }function p(e, t, r, o) {
    function a() {
      d && (delete A.style, delete A.modElem);
    }if (o = i(o, 'undefined') ? !1 : o, !i(r, 'undefined')) {
      var l = f(e, r);if (!i(l, 'undefined')) return l;
    }for (var d, p, m, v, h, y = ['modernizr', 'tspan']; !A.style;) {
      d = !0, A.modElem = s(y.shift()), A.style = A.modElem.style;
    }for (m = e.length, p = 0; m > p; p++) {
      if (v = e[p], h = A.style[v], u(v, '-') && (v = c(v)), A.style[v] !== n) {
        if (o || i(r, 'undefined')) return a(), 'pfx' === t ? v : !0;try {
          A.style[v] = r;
        } catch (g) {}if (A.style[v] !== h) return a(), 'pfx' === t ? v : !0;
      }
    }return a(), !1;
  }function m(e, t) {
    return function () {
      return e.apply(t, arguments);
    };
  }function v(e, t, n) {
    var r;for (var o in e) {
      if (e[o] in t) return n === !1 ? e[o] : (r = t[e[o]], i(r, 'function') ? m(r, n || t) : r);
    }return !1;
  }function h(e, t, n, r, o) {
    var s = e.charAt(0).toUpperCase() + e.slice(1),
        a = (e + ' ' + N.join(s + ' ') + s).split(' ');return i(t, 'string') || i(t, 'undefined') ? p(a, t, r, o) : (a = (e + ' ' + j.join(s + ' ') + s).split(' '), v(a, t, n));
  }function y(e, t, i) {
    return h(e, n, n, t, i);
  }var g = [],
      b = { _version: '3.0.0', _config: { classPrefix: '', enableClasses: !0, enableJSClass: !0, usePrefixes: !0 }, _q: [], on: function on(e, t) {
      var n = this;setTimeout(function () {
        t(n[e]);
      }, 0);
    }, addTest: function addTest(e, t, n) {
      g.push({ name: e, fn: t, options: n });
    }, addAsyncTest: function addAsyncTest(e) {
      g.push({ name: null, fn: e });
    } },
      Modernizr = function Modernizr() {};Modernizr.prototype = b, Modernizr = new Modernizr();var C = [],
      S = t.documentElement,
      x = 'svg' === S.nodeName.toLowerCase(),
      T = s('input'),
      w = 'search tel url email datetime date month week time datetime-local number range color'.split(' '),
      _ = {};Modernizr.inputtypes = function (e) {
    for (var i, r, o, s = e.length, a = ':)', l = 0; s > l; l++) {
      T.setAttribute('type', i = e[l]), o = 'text' !== T.type && 'style' in T, o && (T.value = a, T.style.cssText = 'position:absolute;visibility:hidden;', /^range$/.test(i) && T.style.WebkitAppearance !== n ? (S.appendChild(T), r = t.defaultView, o = r.getComputedStyle && 'textfield' !== r.getComputedStyle(T, null).WebkitAppearance && 0 !== T.offsetHeight, S.removeChild(T)) : /^(search|tel)$/.test(i) || (o = /^(url|email|number)$/.test(i) ? T.checkValidity && T.checkValidity() === !1 : T.value !== a)), _[e[l]] = !!o;
    }return _;
  }(w), Modernizr.addTest('queryselector', 'querySelector' in t && 'querySelectorAll' in t);var z = b._config.usePrefixes ? ' -webkit- -moz- -o- -ms- '.split(' ') : [];b._prefixes = z;var k = b.testStyles = l;Modernizr.addTest('touchevents', function () {
    var n;if ('ontouchstart' in e || e.DocumentTouch && t instanceof DocumentTouch) n = !0;else {
      var i = ['@media (', z.join('touch-enabled),('), 'heartz', ')', '{#modernizr{top:9px;position:absolute}}'].join('');k(i, function (e) {
        n = 9 === e.offsetTop;
      });
    }return n;
  });var E = 'Moz O ms Webkit',
      N = b._config.usePrefixes ? E.split(' ') : [];b._cssomPrefixes = N;var P = { elem: s('modernizr') };Modernizr._q.push(function () {
    delete P.elem;
  });var A = { style: P.elem.style };Modernizr._q.unshift(function () {
    delete A.style;
  });var j = b._config.usePrefixes ? E.toLowerCase().split(' ') : [];b._domPrefixes = j, b.testAllProps = h, b.testAllProps = y, Modernizr.addTest('cssanimations', y('animationName', 'a', !0)), Modernizr.addTest('backgroundsize', y('backgroundSize', '100%', !0)), Modernizr.addTest('borderradius', y('borderRadius', '0px', !0)), Modernizr.addTest('boxshadow', y('boxShadow', '1px 1px', !0)), Modernizr.addTest('cssremunit', function () {
    var e = s('a').style;try {
      e.fontSize = '3rem';
    } catch (t) {}return (/rem/.test(e.fontSize)
    );
  }), Modernizr.addTest('csstransitions', y('transition', 'all', !0)), Modernizr.addTest('formvalidation', function () {
    var t = s('form');if (!('checkValidity' in t && 'addEventListener' in t)) return !1;if ('reportValidity' in t) return !0;var n,
        i = !1;return Modernizr.formvalidationapi = !0, t.addEventListener('submit', function (t) {
      e.opera || t.preventDefault(), t.stopPropagation();
    }, !1), t.innerHTML = '<input name="modTest" required><button></button>', k('#modernizr form{position:absolute;top:-99999em}', function (e) {
      e.appendChild(t), n = t.getElementsByTagName('input')[0], n.addEventListener('invalid', function (e) {
        i = !0, e.preventDefault(), e.stopPropagation();
      }, !1), Modernizr.formvalidationmessage = !!n.validationMessage, t.getElementsByTagName('button')[0].click();
    }), i;
  }), Modernizr.addTest('sessionstorage', function () {
    var e = 'modernizr';try {
      return sessionStorage.setItem(e, e), sessionStorage.removeItem(e), !0;
    } catch (t) {
      return !1;
    }
  }), r(), o(C), delete b.addTest, delete b.addAsyncTest;for (var q = 0; q < Modernizr._q.length; q++) {
    Modernizr._q[q]();
  }e.Modernizr = Modernizr;
}(window, document);

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgNDE2MmMyNTA3ZjFiOWQzZjk3ZjciLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2hlYWQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2hlYWQvbW9kZXJuaXpyLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJlIiwidCIsIm4iLCJpIiwiciIsIm8iLCJzIiwiYSIsImwiLCJnIiwibmFtZSIsInB1c2giLCJ0b0xvd2VyQ2FzZSIsIm9wdGlvbnMiLCJhbGlhc2VzIiwibGVuZ3RoIiwiZm4iLCJzcGxpdCIsIk1vZGVybml6ciIsIkJvb2xlYW4iLCJDIiwiam9pbiIsIlMiLCJjbGFzc05hbWUiLCJfY29uZmlnIiwiY2xhc3NQcmVmaXgiLCJ4IiwiYmFzZVZhbCIsImVuYWJsZUpTQ2xhc3MiLCJSZWdFeHAiLCJyZXBsYWNlIiwiZW5hYmxlQ2xhc3NlcyIsImNyZWF0ZUVsZW1lbnQiLCJhcmd1bWVudHMiLCJjcmVhdGVFbGVtZW50TlMiLCJjYWxsIiwiYXBwbHkiLCJib2R5IiwiZmFrZSIsInUiLCJkIiwiZiIsImMiLCJwIiwicGFyc2VJbnQiLCJpZCIsImFwcGVuZENoaWxkIiwidHlwZSIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3JlYXRlVGV4dE5vZGUiLCJzdHlsZSIsImJhY2tncm91bmQiLCJvdmVyZmxvdyIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsIm9mZnNldEhlaWdodCIsImluZGV4T2YiLCJDU1MiLCJzdXBwb3J0cyIsImdldENvbXB1dGVkU3R5bGUiLCJwb3NpdGlvbiIsInRvVXBwZXJDYXNlIiwiQSIsIm1vZEVsZW0iLCJtIiwidiIsImgiLCJ5Iiwic2hpZnQiLCJjaGFyQXQiLCJzbGljZSIsIk4iLCJqIiwiYiIsIl92ZXJzaW9uIiwidXNlUHJlZml4ZXMiLCJfcSIsIm9uIiwic2V0VGltZW91dCIsImFkZFRlc3QiLCJhZGRBc3luY1Rlc3QiLCJwcm90b3R5cGUiLCJkb2N1bWVudEVsZW1lbnQiLCJub2RlTmFtZSIsIlQiLCJ3IiwiXyIsImlucHV0dHlwZXMiLCJzZXRBdHRyaWJ1dGUiLCJ2YWx1ZSIsInRlc3QiLCJXZWJraXRBcHBlYXJhbmNlIiwiZGVmYXVsdFZpZXciLCJjaGVja1ZhbGlkaXR5IiwieiIsIl9wcmVmaXhlcyIsImsiLCJ0ZXN0U3R5bGVzIiwiRG9jdW1lbnRUb3VjaCIsIm9mZnNldFRvcCIsIkUiLCJfY3Nzb21QcmVmaXhlcyIsIlAiLCJlbGVtIiwidW5zaGlmdCIsIl9kb21QcmVmaXhlcyIsInRlc3RBbGxQcm9wcyIsImZvbnRTaXplIiwiZm9ybXZhbGlkYXRpb25hcGkiLCJhZGRFdmVudExpc3RlbmVyIiwib3BlcmEiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImlubmVySFRNTCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiZm9ybXZhbGlkYXRpb25tZXNzYWdlIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJjbGljayIsInNlc3Npb25TdG9yYWdlIiwic2V0SXRlbSIsInJlbW92ZUl0ZW0iLCJxIiwid2luZG93IiwiZG9jdW1lbnQiXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsbUNBQTJCLDBCQUEwQixFQUFFO0FBQ3ZELHlDQUFpQyxlQUFlO0FBQ2hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhEQUFzRCwrREFBK0Q7O0FBRXJIO0FBQ0E7O0FBRUE7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDNURBOzs7Ozs7Ozs7Ozs7OztBQWNBOztBQUVBLG1CQUFBQSxDQUFRLEVBQVIsRTs7Ozs7Ozs7Ozs7O0FDakJBOztBQUVBLENBQUUsVUFBU0MsQ0FBVCxFQUFZQyxDQUFaLEVBQWVDLENBQWYsRUFBa0I7QUFBRSxXQUFTQyxDQUFULENBQVdILENBQVgsRUFBY0MsQ0FBZCxFQUFpQjtBQUFFLFdBQU8sUUFBT0QsQ0FBUCx5Q0FBT0EsQ0FBUCxPQUFhQyxDQUFwQjtBQUF3QixHQUFDLFNBQVNHLENBQVQsR0FBYTtBQUFFLFFBQUlKLENBQUosRUFBT0MsQ0FBUCxFQUFVQyxDQUFWLEVBQWFFLENBQWIsRUFBZ0JDLENBQWhCLEVBQW1CQyxDQUFuQixFQUFzQkMsQ0FBdEIsQ0FBeUIsS0FBSyxJQUFJQyxDQUFULElBQWNDLENBQWQsRUFBaUI7QUFBRSxVQUFJVCxJQUFJLEVBQUosRUFBUUMsSUFBSVEsRUFBRUQsQ0FBRixDQUFaLEVBQWtCUCxFQUFFUyxJQUFGLEtBQVdWLEVBQUVXLElBQUYsQ0FBT1YsRUFBRVMsSUFBRixDQUFPRSxXQUFQLEVBQVAsR0FBOEJYLEVBQUVZLE9BQUYsSUFBYVosRUFBRVksT0FBRixDQUFVQyxPQUF2QixJQUFrQ2IsRUFBRVksT0FBRixDQUFVQyxPQUFWLENBQWtCQyxNQUE3RixDQUF0QixFQUE0SCxLQUFLYixJQUFJLENBQVQsRUFBV0EsSUFBSUQsRUFBRVksT0FBRixDQUFVQyxPQUFWLENBQWtCQyxNQUFqQyxFQUF3Q2IsR0FBeEM7QUFBNENGLFVBQUVXLElBQUYsQ0FBT1YsRUFBRVksT0FBRixDQUFVQyxPQUFWLENBQWtCWixDQUFsQixFQUFxQlUsV0FBckIsRUFBUDtBQUE1QyxPQUF3RixLQUFLUixJQUFJRCxFQUFFRixFQUFFZSxFQUFKLEVBQVEsVUFBUixJQUFzQmYsRUFBRWUsRUFBRixFQUF0QixHQUErQmYsRUFBRWUsRUFBckMsRUFBeUNYLElBQUksQ0FBbEQsRUFBb0RBLElBQUlMLEVBQUVlLE1BQTFELEVBQWlFVixHQUFqRTtBQUFxRUMsWUFBSU4sRUFBRUssQ0FBRixDQUFKLEVBQVVFLElBQUlELEVBQUVXLEtBQUYsQ0FBUSxHQUFSLENBQWQsRUFBNEIsTUFBTVYsRUFBRVEsTUFBUixHQUFpQkcsVUFBVVgsRUFBRSxDQUFGLENBQVYsSUFBa0JILENBQW5DLElBQXdDLENBQUNjLFVBQVVYLEVBQUUsQ0FBRixDQUFWLENBQUQsSUFBb0JXLFVBQVVYLEVBQUUsQ0FBRixDQUFWLGFBQTBCWSxPQUE5QyxLQUEwREQsVUFBVVgsRUFBRSxDQUFGLENBQVYsSUFBa0IsSUFBSVksT0FBSixDQUFZRCxVQUFVWCxFQUFFLENBQUYsQ0FBVixDQUFaLENBQTVFLEdBQTJHVyxVQUFVWCxFQUFFLENBQUYsQ0FBVixFQUFnQkEsRUFBRSxDQUFGLENBQWhCLElBQXdCSCxDQUEzSyxDQUE1QixFQUEyTWdCLEVBQUVULElBQUYsQ0FBTyxDQUFDUCxJQUFJLEVBQUosR0FBUyxLQUFWLElBQW1CRyxFQUFFYyxJQUFGLENBQU8sR0FBUCxDQUExQixDQUEzTTtBQUFyRTtBQUF5VDtBQUFFLEdBQUMsU0FBU2hCLENBQVQsQ0FBV0wsQ0FBWCxFQUFjO0FBQUUsUUFBSUMsSUFBSXFCLEVBQUVDLFNBQVY7QUFBQSxRQUFxQnJCLElBQUlnQixVQUFVTSxPQUFWLENBQWtCQyxXQUFsQixJQUFpQyxFQUExRCxDQUE4RCxJQUFJQyxNQUFNekIsSUFBSUEsRUFBRTBCLE9BQVosR0FBc0JULFVBQVVNLE9BQVYsQ0FBa0JJLGFBQTVDLEVBQTJEO0FBQUUsVUFBSXpCLElBQUksSUFBSTBCLE1BQUosQ0FBVyxZQUFZM0IsQ0FBWixHQUFnQixjQUEzQixDQUFSLENBQW1ERCxJQUFJQSxFQUFFNkIsT0FBRixDQUFVM0IsQ0FBVixFQUFhLE9BQU9ELENBQVAsR0FBVyxNQUF4QixDQUFKO0FBQXNDLGVBQVVzQixPQUFWLENBQWtCTyxhQUFsQixLQUFvQzlCLEtBQUssTUFBTUMsQ0FBTixHQUFVRixFQUFFcUIsSUFBRixDQUFPLE1BQU1uQixDQUFiLENBQWYsRUFBZ0N3QixJQUFJSixFQUFFQyxTQUFGLENBQVlJLE9BQVosR0FBc0IxQixDQUExQixHQUE4QnFCLEVBQUVDLFNBQUYsR0FBY3RCLENBQWhIO0FBQXFILEdBQUMsU0FBU0ssQ0FBVCxHQUFhO0FBQUUsV0FBTyxlQUFlLE9BQU9MLEVBQUUrQixhQUF4QixHQUF3Qy9CLEVBQUUrQixhQUFGLENBQWdCQyxVQUFVLENBQVYsQ0FBaEIsQ0FBeEMsR0FBd0VQLElBQUl6QixFQUFFaUMsZUFBRixDQUFrQkMsSUFBbEIsQ0FBdUJsQyxDQUF2QixFQUEwQiw0QkFBMUIsRUFBd0RnQyxVQUFVLENBQVYsQ0FBeEQsQ0FBSixHQUE0RWhDLEVBQUUrQixhQUFGLENBQWdCSSxLQUFoQixDQUFzQm5DLENBQXRCLEVBQXlCZ0MsU0FBekIsQ0FBM0o7QUFBaU0sR0FBQyxTQUFTMUIsQ0FBVCxHQUFhO0FBQUUsUUFBSVAsSUFBSUMsRUFBRW9DLElBQVYsQ0FBZ0IsT0FBT3JDLE1BQU1BLElBQUlNLEVBQUVvQixJQUFJLEtBQUosR0FBWSxNQUFkLENBQUosRUFBMkIxQixFQUFFc0MsSUFBRixHQUFTLENBQUMsQ0FBM0MsR0FBK0N0QyxDQUF0RDtBQUEwRCxHQUFDLFNBQVNRLENBQVQsQ0FBV1IsQ0FBWCxFQUFjRSxDQUFkLEVBQWlCQyxDQUFqQixFQUFvQkMsQ0FBcEIsRUFBdUI7QUFBRSxRQUFJQyxDQUFKO0FBQUEsUUFBT0csQ0FBUDtBQUFBLFFBQVUrQixDQUFWO0FBQUEsUUFBYUMsQ0FBYjtBQUFBLFFBQWdCQyxJQUFJLFdBQXBCO0FBQUEsUUFBaUNDLElBQUlwQyxFQUFFLEtBQUYsQ0FBckM7QUFBQSxRQUErQ3FDLElBQUlwQyxHQUFuRCxDQUF3RCxJQUFJcUMsU0FBU3pDLENBQVQsRUFBWSxFQUFaLENBQUosRUFBcUIsT0FBTUEsR0FBTjtBQUFXb0MsVUFBSWpDLEVBQUUsS0FBRixDQUFKLEVBQWNpQyxFQUFFTSxFQUFGLEdBQU96QyxJQUFJQSxFQUFFRCxDQUFGLENBQUosR0FBV3NDLEtBQUt0QyxJQUFJLENBQVQsQ0FBaEMsRUFBNkN1QyxFQUFFSSxXQUFGLENBQWNQLENBQWQsQ0FBN0M7QUFBWCxLQUEwRSxPQUFPbEMsSUFBSUMsRUFBRSxPQUFGLENBQUosRUFBZ0JELEVBQUUwQyxJQUFGLEdBQVMsVUFBekIsRUFBcUMxQyxFQUFFd0MsRUFBRixHQUFPLE1BQU1KLENBQWxELEVBQXFELENBQUNFLEVBQUVMLElBQUYsR0FBU0ssQ0FBVCxHQUFhRCxDQUFkLEVBQWlCSSxXQUFqQixDQUE2QnpDLENBQTdCLENBQXJELEVBQXNGc0MsRUFBRUcsV0FBRixDQUFjSixDQUFkLENBQXRGLEVBQXdHckMsRUFBRTJDLFVBQUYsR0FBZTNDLEVBQUUyQyxVQUFGLENBQWFDLE9BQWIsR0FBdUJqRCxDQUF0QyxHQUEwQ0ssRUFBRXlDLFdBQUYsQ0FBYzdDLEVBQUVpRCxjQUFGLENBQWlCbEQsQ0FBakIsQ0FBZCxDQUFsSixFQUFzTDBDLEVBQUVHLEVBQUYsR0FBT0osQ0FBN0wsRUFBZ01FLEVBQUVMLElBQUYsS0FBV0ssRUFBRVEsS0FBRixDQUFRQyxVQUFSLEdBQXFCLEVBQXJCLEVBQXlCVCxFQUFFUSxLQUFGLENBQVFFLFFBQVIsR0FBbUIsUUFBNUMsRUFBc0RiLElBQUlsQixFQUFFNkIsS0FBRixDQUFRRSxRQUFsRSxFQUE0RS9CLEVBQUU2QixLQUFGLENBQVFFLFFBQVIsR0FBbUIsUUFBL0YsRUFBeUcvQixFQUFFd0IsV0FBRixDQUFjSCxDQUFkLENBQXBILENBQWhNLEVBQXVVbkMsSUFBSU4sRUFBRXdDLENBQUYsRUFBSzFDLENBQUwsQ0FBM1UsRUFBb1YyQyxFQUFFTCxJQUFGLElBQVVLLEVBQUVXLFVBQUYsQ0FBYUMsV0FBYixDQUF5QlosQ0FBekIsR0FBNkJyQixFQUFFNkIsS0FBRixDQUFRRSxRQUFSLEdBQW1CYixDQUFoRCxFQUFtRGxCLEVBQUVrQyxZQUEvRCxJQUErRWQsRUFBRVksVUFBRixDQUFhQyxXQUFiLENBQXlCYixDQUF6QixDQUFuYSxFQUFnYyxDQUFDLENBQUNsQyxDQUF6YztBQUE2YyxHQUFDLFNBQVMrQixDQUFULENBQVd2QyxDQUFYLEVBQWNDLENBQWQsRUFBaUI7QUFBRSxXQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBS0QsQ0FBTixFQUFTeUQsT0FBVCxDQUFpQnhELENBQWpCLENBQVY7QUFBZ0MsR0FBQyxTQUFTdUMsQ0FBVCxDQUFXeEMsQ0FBWCxFQUFjO0FBQUUsV0FBT0EsRUFBRThCLE9BQUYsQ0FBVSxVQUFWLEVBQXNCLFVBQVM5QixDQUFULEVBQVlDLENBQVosRUFBZTtBQUFFLGFBQU8sTUFBTUEsRUFBRVcsV0FBRixFQUFiO0FBQStCLEtBQXRFLEVBQXdFa0IsT0FBeEUsQ0FBZ0YsTUFBaEYsRUFBd0YsTUFBeEYsQ0FBUDtBQUF5RyxHQUFDLFNBQVNXLENBQVQsQ0FBV3hDLENBQVgsRUFBY0UsQ0FBZCxFQUFpQjtBQUFFLFFBQUlDLElBQUlILEVBQUVjLE1BQVYsQ0FBa0IsSUFBSSxTQUFRZixDQUFSLElBQWEsY0FBYUEsRUFBRTBELEdBQWhDLEVBQXFDO0FBQUUsYUFBTXRELEdBQU47QUFBWSxZQUFJSixFQUFFMEQsR0FBRixDQUFNQyxRQUFOLENBQWVuQixFQUFFdkMsRUFBRUcsQ0FBRixDQUFGLENBQWYsRUFBd0JELENBQXhCLENBQUosRUFBZ0MsT0FBTyxDQUFDLENBQVI7QUFBNUMsT0FBdUQsT0FBTyxDQUFDLENBQVI7QUFBWSxLQUFDLElBQUkscUJBQW9CSCxDQUF4QixFQUEyQjtBQUFFLFdBQUssSUFBSUssSUFBSSxFQUFiLEVBQWdCRCxHQUFoQjtBQUFxQkMsVUFBRU0sSUFBRixDQUFPLE1BQU02QixFQUFFdkMsRUFBRUcsQ0FBRixDQUFGLENBQU4sR0FBZ0IsR0FBaEIsR0FBc0JELENBQXRCLEdBQTBCLEdBQWpDO0FBQXJCLE9BQTRELE9BQU9FLElBQUlBLEVBQUVnQixJQUFGLENBQU8sTUFBUCxDQUFKLEVBQW9CYixFQUFFLGdCQUFnQkgsQ0FBaEIsR0FBb0IsMENBQXRCLEVBQWtFLFVBQVNMLENBQVQsRUFBWTtBQUFFLGVBQU8sZUFBZTRELGlCQUFpQjVELENBQWpCLEVBQW9CLElBQXBCLEVBQTBCNkQsUUFBaEQ7QUFBMkQsT0FBM0ksQ0FBM0I7QUFBMEssS0FBQyxPQUFPM0QsQ0FBUDtBQUFXLEdBQUMsU0FBU3dDLENBQVQsQ0FBVzFDLENBQVgsRUFBYztBQUFFLFdBQU9BLEVBQUU4QixPQUFGLENBQVUsa0JBQVYsRUFBOEIsVUFBUzlCLENBQVQsRUFBWUMsQ0FBWixFQUFlQyxDQUFmLEVBQWtCO0FBQUUsYUFBT0QsSUFBSUMsRUFBRTRELFdBQUYsRUFBWDtBQUE2QixLQUEvRSxFQUFpRmhDLE9BQWpGLENBQXlGLElBQXpGLEVBQStGLEVBQS9GLENBQVA7QUFBNEcsR0FBQyxTQUFTYSxDQUFULENBQVczQyxDQUFYLEVBQWNDLENBQWQsRUFBaUJHLENBQWpCLEVBQW9CQyxDQUFwQixFQUF1QjtBQUFFLGFBQVNFLENBQVQsR0FBYTtBQUFFaUMsWUFBTSxPQUFPdUIsRUFBRVosS0FBVCxFQUFnQixPQUFPWSxFQUFFQyxPQUEvQjtBQUEwQyxLQUFDLElBQUkzRCxJQUFJRixFQUFFRSxDQUFGLEVBQUssV0FBTCxJQUFvQixDQUFDLENBQXJCLEdBQXlCQSxDQUE3QixFQUFnQyxDQUFDRixFQUFFQyxDQUFGLEVBQUssV0FBTCxDQUFyQyxFQUF3RDtBQUFFLFVBQUlJLElBQUlpQyxFQUFFekMsQ0FBRixFQUFLSSxDQUFMLENBQVIsQ0FBaUIsSUFBSSxDQUFDRCxFQUFFSyxDQUFGLEVBQUssV0FBTCxDQUFMLEVBQXdCLE9BQU9BLENBQVA7QUFBVyxLQUFDLEtBQUssSUFBSWdDLENBQUosRUFBT0csQ0FBUCxFQUFVc0IsQ0FBVixFQUFhQyxDQUFiLEVBQWdCQyxDQUFoQixFQUFtQkMsSUFBSSxDQUFDLFdBQUQsRUFBYyxPQUFkLENBQTVCLEVBQW1ELENBQUNMLEVBQUVaLEtBQXREO0FBQTZEWCxVQUFJLENBQUMsQ0FBTCxFQUFRdUIsRUFBRUMsT0FBRixHQUFZMUQsRUFBRThELEVBQUVDLEtBQUYsRUFBRixDQUFwQixFQUFrQ04sRUFBRVosS0FBRixHQUFVWSxFQUFFQyxPQUFGLENBQVViLEtBQXREO0FBQTdELEtBQTBILEtBQUtjLElBQUlqRSxFQUFFZSxNQUFOLEVBQWM0QixJQUFJLENBQXZCLEVBQXlCc0IsSUFBSXRCLENBQTdCLEVBQStCQSxHQUEvQjtBQUFvQyxVQUFJdUIsSUFBSWxFLEVBQUUyQyxDQUFGLENBQUosRUFBVXdCLElBQUlKLEVBQUVaLEtBQUYsQ0FBUWUsQ0FBUixDQUFkLEVBQTBCM0IsRUFBRTJCLENBQUYsRUFBSyxHQUFMLE1BQWNBLElBQUl4QixFQUFFd0IsQ0FBRixDQUFsQixDQUExQixFQUFtREgsRUFBRVosS0FBRixDQUFRZSxDQUFSLE1BQWVoRSxDQUF0RSxFQUF5RTtBQUFFLFlBQUlHLEtBQUtGLEVBQUVDLENBQUYsRUFBSyxXQUFMLENBQVQsRUFBNEIsT0FBT0csS0FBSyxVQUFVTixDQUFWLEdBQWNpRSxDQUFkLEdBQWtCLENBQUMsQ0FBL0IsQ0FBa0MsSUFBSTtBQUFFSCxZQUFFWixLQUFGLENBQVFlLENBQVIsSUFBYTlELENBQWI7QUFBaUIsU0FBdkIsQ0FBd0IsT0FBT0ssQ0FBUCxFQUFVLENBQUUsQ0FBQyxJQUFJc0QsRUFBRVosS0FBRixDQUFRZSxDQUFSLE1BQWVDLENBQW5CLEVBQXNCLE9BQU81RCxLQUFLLFVBQVVOLENBQVYsR0FBY2lFLENBQWQsR0FBa0IsQ0FBQyxDQUEvQjtBQUFtQztBQUEzUSxLQUE0USxPQUFPM0QsS0FBSyxDQUFDLENBQWI7QUFBaUIsR0FBQyxTQUFTMEQsQ0FBVCxDQUFXakUsQ0FBWCxFQUFjQyxDQUFkLEVBQWlCO0FBQUUsV0FBTyxZQUFXO0FBQUUsYUFBT0QsRUFBRW9DLEtBQUYsQ0FBUW5DLENBQVIsRUFBV2dDLFNBQVgsQ0FBUDtBQUErQixLQUFuRDtBQUFzRCxHQUFDLFNBQVNpQyxDQUFULENBQVdsRSxDQUFYLEVBQWNDLENBQWQsRUFBaUJDLENBQWpCLEVBQW9CO0FBQUUsUUFBSUUsQ0FBSixDQUFPLEtBQUssSUFBSUMsQ0FBVCxJQUFjTCxDQUFkO0FBQWlCLFVBQUlBLEVBQUVLLENBQUYsS0FBT0osQ0FBWCxFQUFjLE9BQU9DLE1BQU0sQ0FBQyxDQUFQLEdBQVdGLEVBQUVLLENBQUYsQ0FBWCxJQUFtQkQsSUFBSUgsRUFBRUQsRUFBRUssQ0FBRixDQUFGLENBQUosRUFBYUYsRUFBRUMsQ0FBRixFQUFLLFVBQUwsSUFBbUI2RCxFQUFFN0QsQ0FBRixFQUFLRixLQUFLRCxDQUFWLENBQW5CLEdBQWtDRyxDQUFsRSxDQUFQO0FBQS9CLEtBQTRHLE9BQU8sQ0FBQyxDQUFSO0FBQVksR0FBQyxTQUFTK0QsQ0FBVCxDQUFXbkUsQ0FBWCxFQUFjQyxDQUFkLEVBQWlCQyxDQUFqQixFQUFvQkUsQ0FBcEIsRUFBdUJDLENBQXZCLEVBQTBCO0FBQUUsUUFBSUMsSUFBSU4sRUFBRXNFLE1BQUYsQ0FBUyxDQUFULEVBQVlSLFdBQVosS0FBNEI5RCxFQUFFdUUsS0FBRixDQUFRLENBQVIsQ0FBcEM7QUFBQSxRQUFnRGhFLElBQUksQ0FBQ1AsSUFBSSxHQUFKLEdBQVV3RSxFQUFFbkQsSUFBRixDQUFPZixJQUFJLEdBQVgsQ0FBVixHQUE0QkEsQ0FBN0IsRUFBZ0NXLEtBQWhDLENBQXNDLEdBQXRDLENBQXBELENBQWdHLE9BQU9kLEVBQUVGLENBQUYsRUFBSyxRQUFMLEtBQWtCRSxFQUFFRixDQUFGLEVBQUssV0FBTCxDQUFsQixHQUFzQzBDLEVBQUVwQyxDQUFGLEVBQUtOLENBQUwsRUFBUUcsQ0FBUixFQUFXQyxDQUFYLENBQXRDLElBQXVERSxJQUFJLENBQUNQLElBQUksR0FBSixHQUFVeUUsRUFBRXBELElBQUYsQ0FBT2YsSUFBSSxHQUFYLENBQVYsR0FBNEJBLENBQTdCLEVBQWdDVyxLQUFoQyxDQUFzQyxHQUF0QyxDQUFKLEVBQWdEaUQsRUFBRTNELENBQUYsRUFBS04sQ0FBTCxFQUFRQyxDQUFSLENBQXZHLENBQVA7QUFBNEgsR0FBQyxTQUFTa0UsQ0FBVCxDQUFXcEUsQ0FBWCxFQUFjQyxDQUFkLEVBQWlCRSxDQUFqQixFQUFvQjtBQUFFLFdBQU9nRSxFQUFFbkUsQ0FBRixFQUFLRSxDQUFMLEVBQVFBLENBQVIsRUFBV0QsQ0FBWCxFQUFjRSxDQUFkLENBQVA7QUFBMEIsR0FBQyxJQUFJTSxJQUFJLEVBQVI7QUFBQSxNQUFZaUUsSUFBSSxFQUFDQyxVQUFTLE9BQVYsRUFBbUJuRCxTQUFRLEVBQUNDLGFBQVksRUFBYixFQUFpQk0sZUFBYyxDQUFDLENBQWhDLEVBQW1DSCxlQUFjLENBQUMsQ0FBbEQsRUFBcURnRCxhQUFZLENBQUMsQ0FBbEUsRUFBM0IsRUFBaUdDLElBQUcsRUFBcEcsRUFBd0dDLElBQUksWUFBUzlFLENBQVQsRUFBWUMsQ0FBWixFQUFlO0FBQUUsVUFBSUMsSUFBSSxJQUFSLENBQWE2RSxXQUFXLFlBQVc7QUFBRTlFLFVBQUVDLEVBQUVGLENBQUYsQ0FBRjtBQUFVLE9BQWxDLEVBQW9DLENBQXBDO0FBQXlDLEtBQW5MLEVBQXFMZ0YsU0FBUyxpQkFBU2hGLENBQVQsRUFBWUMsQ0FBWixFQUFlQyxDQUFmLEVBQWtCO0FBQUVPLFFBQUVFLElBQUYsQ0FBTyxFQUFDRCxNQUFLVixDQUFOLEVBQVNnQixJQUFHZixDQUFaLEVBQWVZLFNBQVFYLENBQXZCLEVBQVA7QUFBb0MsS0FBdFAsRUFBd1ArRSxjQUFjLHNCQUFTakYsQ0FBVCxFQUFZO0FBQUVTLFFBQUVFLElBQUYsQ0FBTyxFQUFDRCxNQUFLLElBQU4sRUFBWU0sSUFBR2hCLENBQWYsRUFBUDtBQUE0QixLQUFoVCxFQUFoQjtBQUFBLE1BQW1Va0IsWUFBWSxxQkFBVyxDQUFFLENBQTVWLENBQTZWQSxVQUFVZ0UsU0FBVixHQUFzQlIsQ0FBdEIsRUFBeUJ4RCxZQUFZLElBQUlBLFNBQUosRUFBckMsQ0FBb0QsSUFBSUUsSUFBSSxFQUFSO0FBQUEsTUFBWUUsSUFBSXJCLEVBQUVrRixlQUFsQjtBQUFBLE1BQW1DekQsSUFBSSxVQUFVSixFQUFFOEQsUUFBRixDQUFXeEUsV0FBWCxFQUFqRDtBQUFBLE1BQTJFeUUsSUFBSS9FLEVBQUUsT0FBRixDQUEvRTtBQUFBLE1BQTJGZ0YsSUFBSSx1RkFBdUZyRSxLQUF2RixDQUE2RixHQUE3RixDQUEvRjtBQUFBLE1BQWtNc0UsSUFBSSxFQUF0TSxDQUF5TXJFLFVBQVVzRSxVQUFWLEdBQXVCLFVBQVN4RixDQUFULEVBQVk7QUFBRSxTQUFLLElBQUlHLENBQUosRUFBT0MsQ0FBUCxFQUFVQyxDQUFWLEVBQWFDLElBQUlOLEVBQUVlLE1BQW5CLEVBQTJCUixJQUFJLElBQS9CLEVBQXFDQyxJQUFJLENBQTlDLEVBQWdERixJQUFJRSxDQUFwRCxFQUFzREEsR0FBdEQ7QUFBMEQ2RSxRQUFFSSxZQUFGLENBQWUsTUFBZixFQUF1QnRGLElBQUlILEVBQUVRLENBQUYsQ0FBM0IsR0FBa0NILElBQUksV0FBV2dGLEVBQUV0QyxJQUFiLElBQXFCLFdBQVVzQyxDQUFyRSxFQUF3RWhGLE1BQU1nRixFQUFFSyxLQUFGLEdBQVVuRixDQUFWLEVBQWE4RSxFQUFFbEMsS0FBRixDQUFRRixPQUFSLEdBQWtCLHNDQUEvQixFQUF1RSxVQUFVMEMsSUFBVixDQUFleEYsQ0FBZixLQUFxQmtGLEVBQUVsQyxLQUFGLENBQVF5QyxnQkFBUixLQUE2QjFGLENBQWxELElBQXVEb0IsRUFBRXdCLFdBQUYsQ0FBY3VDLENBQWQsR0FBa0JqRixJQUFJSCxFQUFFNEYsV0FBeEIsRUFBcUN4RixJQUFJRCxFQUFFd0QsZ0JBQUYsSUFBc0IsZ0JBQWdCeEQsRUFBRXdELGdCQUFGLENBQW1CeUIsQ0FBbkIsRUFBc0IsSUFBdEIsRUFBNEJPLGdCQUFsRSxJQUFzRixNQUFNUCxFQUFFN0IsWUFBdkksRUFBcUpsQyxFQUFFaUMsV0FBRixDQUFjOEIsQ0FBZCxDQUE1TSxJQUFnTyxpQkFBaUJNLElBQWpCLENBQXNCeEYsQ0FBdEIsTUFBNkJFLElBQUksdUJBQXVCc0YsSUFBdkIsQ0FBNEJ4RixDQUE1QixJQUFpQ2tGLEVBQUVTLGFBQUYsSUFBbUJULEVBQUVTLGFBQUYsT0FBc0IsQ0FBQyxDQUEzRSxHQUErRVQsRUFBRUssS0FBRixLQUFZbkYsQ0FBNUgsQ0FBN1MsQ0FBeEUsRUFBc2ZnRixFQUFFdkYsRUFBRVEsQ0FBRixDQUFGLElBQVUsQ0FBQyxDQUFDSCxDQUFsZ0I7QUFBMUQsS0FBK2pCLE9BQU9rRixDQUFQO0FBQVcsR0FBeGxCLENBQXlsQkQsQ0FBemxCLENBQXZCLEVBQW9uQnBFLFVBQVU4RCxPQUFWLENBQWtCLGVBQWxCLEVBQW1DLG1CQUFrQi9FLENBQWxCLElBQXVCLHNCQUFxQkEsQ0FBL0UsQ0FBcG5CLENBQXVzQixJQUFJOEYsSUFBSXJCLEVBQUVsRCxPQUFGLENBQVVvRCxXQUFWLEdBQXdCLDRCQUE0QjNELEtBQTVCLENBQWtDLEdBQWxDLENBQXhCLEdBQWlFLEVBQXpFLENBQTRFeUQsRUFBRXNCLFNBQUYsR0FBY0QsQ0FBZCxDQUFpQixJQUFJRSxJQUFJdkIsRUFBRXdCLFVBQUYsR0FBZTFGLENBQXZCLENBQXlCVSxVQUFVOEQsT0FBVixDQUFrQixhQUFsQixFQUFpQyxZQUFXO0FBQUUsUUFBSTlFLENBQUosQ0FBTyxJQUFJLGtCQUFpQkYsQ0FBakIsSUFBc0JBLEVBQUVtRyxhQUFGLElBQW1CbEcsYUFBYWtHLGFBQTFELEVBQXdFakcsSUFBSSxDQUFDLENBQUwsQ0FBeEUsS0FBb0Y7QUFBRSxVQUFJQyxJQUFJLENBQUMsVUFBRCxFQUFhNEYsRUFBRTFFLElBQUYsQ0FBTyxrQkFBUCxDQUFiLEVBQXlDLFFBQXpDLEVBQW1ELEdBQW5ELEVBQXdELHlDQUF4RCxFQUFtR0EsSUFBbkcsQ0FBd0csRUFBeEcsQ0FBUixDQUFvSDRFLEVBQUU5RixDQUFGLEVBQUssVUFBU0gsQ0FBVCxFQUFZO0FBQUVFLFlBQUksTUFBTUYsRUFBRW9HLFNBQVo7QUFBd0IsT0FBM0M7QUFBK0MsS0FBQyxPQUFPbEcsQ0FBUDtBQUFXLEdBQTFULEVBQTZULElBQUltRyxJQUFJLGlCQUFSO0FBQUEsTUFBMkI3QixJQUFJRSxFQUFFbEQsT0FBRixDQUFVb0QsV0FBVixHQUF3QnlCLEVBQUVwRixLQUFGLENBQVEsR0FBUixDQUF4QixHQUF1QyxFQUF0RSxDQUF5RXlELEVBQUU0QixjQUFGLEdBQW1COUIsQ0FBbkIsQ0FBc0IsSUFBSStCLElBQUksRUFBQ0MsTUFBS2xHLEVBQUUsV0FBRixDQUFOLEVBQVIsQ0FBOEJZLFVBQVUyRCxFQUFWLENBQWFsRSxJQUFiLENBQWtCLFlBQVc7QUFBRSxXQUFPNEYsRUFBRUMsSUFBVDtBQUFnQixHQUEvQyxFQUFrRCxJQUFJekMsSUFBSSxFQUFDWixPQUFNb0QsRUFBRUMsSUFBRixDQUFPckQsS0FBZCxFQUFSLENBQTZCakMsVUFBVTJELEVBQVYsQ0FBYTRCLE9BQWIsQ0FBcUIsWUFBVztBQUFFLFdBQU8xQyxFQUFFWixLQUFUO0FBQWlCLEdBQW5ELEVBQXNELElBQUlzQixJQUFJQyxFQUFFbEQsT0FBRixDQUFVb0QsV0FBVixHQUF3QnlCLEVBQUV6RixXQUFGLEdBQWdCSyxLQUFoQixDQUFzQixHQUF0QixDQUF4QixHQUFxRCxFQUE3RCxDQUFnRXlELEVBQUVnQyxZQUFGLEdBQWlCakMsQ0FBakIsRUFBb0JDLEVBQUVpQyxZQUFGLEdBQWlCeEMsQ0FBckMsRUFBd0NPLEVBQUVpQyxZQUFGLEdBQWlCdkMsQ0FBekQsRUFBNERsRCxVQUFVOEQsT0FBVixDQUFrQixlQUFsQixFQUFtQ1osRUFBRSxlQUFGLEVBQW1CLEdBQW5CLEVBQXdCLENBQUMsQ0FBekIsQ0FBbkMsQ0FBNUQsRUFBNkhsRCxVQUFVOEQsT0FBVixDQUFrQixnQkFBbEIsRUFBb0NaLEVBQUUsZ0JBQUYsRUFBb0IsTUFBcEIsRUFBNEIsQ0FBQyxDQUE3QixDQUFwQyxDQUE3SCxFQUFtTWxELFVBQVU4RCxPQUFWLENBQWtCLGNBQWxCLEVBQWtDWixFQUFFLGNBQUYsRUFBa0IsS0FBbEIsRUFBeUIsQ0FBQyxDQUExQixDQUFsQyxDQUFuTSxFQUFvUWxELFVBQVU4RCxPQUFWLENBQWtCLFdBQWxCLEVBQStCWixFQUFFLFdBQUYsRUFBZSxTQUFmLEVBQTBCLENBQUMsQ0FBM0IsQ0FBL0IsQ0FBcFEsRUFBbVVsRCxVQUFVOEQsT0FBVixDQUFrQixZQUFsQixFQUFnQyxZQUFXO0FBQUUsUUFBSWhGLElBQUlNLEVBQUUsR0FBRixFQUFPNkMsS0FBZixDQUFzQixJQUFJO0FBQUVuRCxRQUFFNEcsUUFBRixHQUFhLE1BQWI7QUFBc0IsS0FBNUIsQ0FBNkIsT0FBTzNHLENBQVAsRUFBVSxDQUFFLENBQUMsT0FBTyxPQUFNMEYsSUFBTixDQUFXM0YsRUFBRTRHLFFBQWI7QUFBUDtBQUFnQyxHQUE3SSxDQUFuVSxFQUFtZDFGLFVBQVU4RCxPQUFWLENBQWtCLGdCQUFsQixFQUFvQ1osRUFBRSxZQUFGLEVBQWdCLEtBQWhCLEVBQXVCLENBQUMsQ0FBeEIsQ0FBcEMsQ0FBbmQsRUFBb2hCbEQsVUFBVThELE9BQVYsQ0FBa0IsZ0JBQWxCLEVBQW9DLFlBQVc7QUFBRSxRQUFJL0UsSUFBSUssRUFBRSxNQUFGLENBQVIsQ0FBbUIsSUFBSSxFQUFFLG1CQUFrQkwsQ0FBbEIsSUFBdUIsc0JBQXFCQSxDQUE5QyxDQUFKLEVBQXNELE9BQU8sQ0FBQyxDQUFSLENBQVcsSUFBSSxvQkFBbUJBLENBQXZCLEVBQTBCLE9BQU8sQ0FBQyxDQUFSLENBQVcsSUFBSUMsQ0FBSjtBQUFBLFFBQU9DLElBQUksQ0FBQyxDQUFaLENBQWUsT0FBT2UsVUFBVTJGLGlCQUFWLEdBQThCLENBQUMsQ0FBL0IsRUFBa0M1RyxFQUFFNkcsZ0JBQUYsQ0FBbUIsUUFBbkIsRUFBNkIsVUFBUzdHLENBQVQsRUFBWTtBQUFFRCxRQUFFK0csS0FBRixJQUFXOUcsRUFBRStHLGNBQUYsRUFBWCxFQUErQi9HLEVBQUVnSCxlQUFGLEVBQS9CO0FBQXFELEtBQWhHLEVBQWtHLENBQUMsQ0FBbkcsQ0FBbEMsRUFBeUloSCxFQUFFaUgsU0FBRixHQUFjLGtEQUF2SixFQUEyTWpCLEVBQUUsaURBQUYsRUFBcUQsVUFBU2pHLENBQVQsRUFBWTtBQUFFQSxRQUFFOEMsV0FBRixDQUFjN0MsQ0FBZCxHQUFrQkMsSUFBSUQsRUFBRWtILG9CQUFGLENBQXVCLE9BQXZCLEVBQWdDLENBQWhDLENBQXRCLEVBQTBEakgsRUFBRTRHLGdCQUFGLENBQW1CLFNBQW5CLEVBQThCLFVBQVM5RyxDQUFULEVBQVk7QUFBRUcsWUFBSSxDQUFDLENBQUwsRUFBUUgsRUFBRWdILGNBQUYsRUFBUixFQUE0QmhILEVBQUVpSCxlQUFGLEVBQTVCO0FBQWtELE9BQTlGLEVBQWdHLENBQUMsQ0FBakcsQ0FBMUQsRUFBK0ovRixVQUFVa0cscUJBQVYsR0FBa0MsQ0FBQyxDQUFDbEgsRUFBRW1ILGlCQUFyTSxFQUF3TnBILEVBQUVrSCxvQkFBRixDQUF1QixRQUF2QixFQUFpQyxDQUFqQyxFQUFvQ0csS0FBcEMsRUFBeE47QUFBc1EsS0FBelUsQ0FBM00sRUFBdWhCbkgsQ0FBOWhCO0FBQWtpQixHQUEzdEIsQ0FBcGhCLEVBQWt2Q2UsVUFBVThELE9BQVYsQ0FBa0IsZ0JBQWxCLEVBQW9DLFlBQVc7QUFBRSxRQUFJaEYsSUFBSSxXQUFSLENBQXFCLElBQUk7QUFBRSxhQUFPdUgsZUFBZUMsT0FBZixDQUF1QnhILENBQXZCLEVBQTBCQSxDQUExQixHQUE4QnVILGVBQWVFLFVBQWYsQ0FBMEJ6SCxDQUExQixDQUE5QixFQUE0RCxDQUFDLENBQXBFO0FBQXdFLEtBQTlFLENBQStFLE9BQU9DLENBQVAsRUFBVTtBQUFFLGFBQU8sQ0FBQyxDQUFSO0FBQVk7QUFBRSxHQUEvSyxDQUFsdkMsRUFBbzZDRyxHQUFwNkMsRUFBeTZDQyxFQUFFZSxDQUFGLENBQXo2QyxFQUErNkMsT0FBT3NELEVBQUVNLE9BQXg3QyxFQUFpOEMsT0FBT04sRUFBRU8sWUFBMThDLENBQXc5QyxLQUFLLElBQUl5QyxJQUFJLENBQWIsRUFBZUEsSUFBSXhHLFVBQVUyRCxFQUFWLENBQWE5RCxNQUFoQyxFQUF1QzJHLEdBQXZDO0FBQTJDeEcsY0FBVTJELEVBQVYsQ0FBYTZDLENBQWI7QUFBM0MsR0FBNkQxSCxFQUFFa0IsU0FBRixHQUFjQSxTQUFkO0FBQTBCLENBQWx3TyxDQUFtd095RyxNQUFud08sRUFBMndPQyxRQUEzd08sQ0FBRixDIiwiZmlsZSI6ImJ1bmRsZS1oZWFkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZ2V0dGVyXG4gXHRcdFx0fSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTQpO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHdlYnBhY2svYm9vdHN0cmFwIDQxNjJjMjUwN2YxYjlkM2Y5N2Y3IiwiXG4vKipcbiAqIEhlYWRcbiAqXG4gKiBUaGlzIGZpbGUgc2hvdWxkIG9ubHkgaW5jbHVkZSBiYXNpYyBlbnZpcm9ubWVudCBzZXR1cCBsb2dpYyBhbmQgYnJvd3NlciBmZWF0dXJlIHRlc3RzXG4gKlxuICogVGhpcyBzaG91bGQgYmUgaW5jbHVkZWQgYmVmb3JlIHRoZSBzdHlsZXNoZWV0IHNvIHRoZSBicm93c2VyIGRvZXNuJ3QgbmVlZCB0byByZWZsb3cgYWZ0ZXIgYWRkaW5nIHRoZSBmZWF0dXJlXG4gKiBkZXRlY3QgY2xhc3NlcyBmcm9tIG1vZGVybml6ZXIuIFNpbmNlIHRoaXMgZ29lcyBiZWZvcmUgdGhlIHN0eWxlc2hlZXQgdGhpcyBmaWxlIHNob3VsZCBiZSBwbGFjZWQgaW5saW5lIGludG8gdGhlIGh0bWwuXG4gKlxuICogV2hlcmUgcG9zc2libGUgdGhpcyBmaWxlIHNob3VsZCBhbHdheXMgYmUgbWluaWZpZWQgYW5kIG9iZnVzY2F0ZWQgdmlhIGBndWxwIHByb2RgLlxuICpcbiAqIEJFV0FSRTogVGhpcyBmaWxlIGFuZCBhbGwgZGVwZW5kZW5jaWVzIG9mIHRoaXMgZmlsZSBzaG91bGQgbm90IGV4Y2VlZCAxLjVrYiBvciBpdCB3aWxsIHNsb3cgZG93biBldmVyeSBwYWdlXG4gKiByZXF1ZXN0IGFzIGl0IGNhbid0IGJlIGNhY2hlZCBzaW5jZSBpdCdzIGlubGluZSBhbmQgYWxsLlxuICpcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5yZXF1aXJlKCcuL21vZGVybml6ci5qcycpO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2pzL2hlYWQvaW5kZXguanMiLCIvKiEgbW9kZXJuaXpyIDMuMC4wIChDdXN0b20gQnVpbGQpIHwgTUlUICpcbiAqIGh0dHA6Ly9tb2Rlcm5penIuY29tL2Rvd25sb2FkLz8tYmFja2dyb3VuZHNpemUtYm9yZGVycmFkaXVzLWJveHNoYWRvdy1jc3NhbmltYXRpb25zLWNzc3JlbXVuaXQtY3NzdHJhbnNpdGlvbnMtZm9ybXZhbGlkYXRpb24taW5wdXR0eXBlcy1xdWVyeXNlbGVjdG9yLXNlc3Npb25zdG9yYWdlLXRvdWNoZXZlbnRzICEqL1xuISBmdW5jdGlvbihlLCB0LCBuKSB7IGZ1bmN0aW9uIGkoZSwgdCkgeyByZXR1cm4gdHlwZW9mIGUgPT09IHQ7IH0gZnVuY3Rpb24gcigpIHsgdmFyIGUsIHQsIG4sIHIsIG8sIHMsIGE7IGZvciAodmFyIGwgaW4gZykgeyBpZiAoZSA9IFtdLCB0ID0gZ1tsXSwgdC5uYW1lICYmIChlLnB1c2godC5uYW1lLnRvTG93ZXJDYXNlKCkpLCB0Lm9wdGlvbnMgJiYgdC5vcHRpb25zLmFsaWFzZXMgJiYgdC5vcHRpb25zLmFsaWFzZXMubGVuZ3RoKSkgZm9yIChuID0gMDtuIDwgdC5vcHRpb25zLmFsaWFzZXMubGVuZ3RoO24rKyllLnB1c2godC5vcHRpb25zLmFsaWFzZXNbbl0udG9Mb3dlckNhc2UoKSk7IGZvciAociA9IGkodC5mbiwgJ2Z1bmN0aW9uJykgPyB0LmZuKCkgOiB0LmZuLCBvID0gMDtvIDwgZS5sZW5ndGg7bysrKXMgPSBlW29dLCBhID0gcy5zcGxpdCgnLicpLCAxID09PSBhLmxlbmd0aCA/IE1vZGVybml6clthWzBdXSA9IHIgOiAoIU1vZGVybml6clthWzBdXSB8fCBNb2Rlcm5penJbYVswXV1pbnN0YW5jZW9mIEJvb2xlYW4gfHwgKE1vZGVybml6clthWzBdXSA9IG5ldyBCb29sZWFuKE1vZGVybml6clthWzBdXSkpLCBNb2Rlcm5penJbYVswXV1bYVsxXV0gPSByKSwgQy5wdXNoKChyID8gJycgOiAnbm8tJykgKyBhLmpvaW4oJy0nKSk7IH0gfSBmdW5jdGlvbiBvKGUpIHsgdmFyIHQgPSBTLmNsYXNzTmFtZSwgbiA9IE1vZGVybml6ci5fY29uZmlnLmNsYXNzUHJlZml4IHx8ICcnOyBpZiAoeCAmJiAodCA9IHQuYmFzZVZhbCksIE1vZGVybml6ci5fY29uZmlnLmVuYWJsZUpTQ2xhc3MpIHsgdmFyIGkgPSBuZXcgUmVnRXhwKCcoXnxcXFxccyknICsgbiArICduby1qcyhcXFxcc3wkKScpO3QgPSB0LnJlcGxhY2UoaSwgJyQxJyArIG4gKyAnanMkMicpOyB9TW9kZXJuaXpyLl9jb25maWcuZW5hYmxlQ2xhc3NlcyAmJiAodCArPSAnICcgKyBuICsgZS5qb2luKCcgJyArIG4pLCB4ID8gUy5jbGFzc05hbWUuYmFzZVZhbCA9IHQgOiBTLmNsYXNzTmFtZSA9IHQpOyB9IGZ1bmN0aW9uIHMoKSB7IHJldHVybiAnZnVuY3Rpb24nICE9PSB0eXBlb2YgdC5jcmVhdGVFbGVtZW50ID8gdC5jcmVhdGVFbGVtZW50KGFyZ3VtZW50c1swXSkgOiB4ID8gdC5jcmVhdGVFbGVtZW50TlMuY2FsbCh0LCAnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLCBhcmd1bWVudHNbMF0pIDogdC5jcmVhdGVFbGVtZW50LmFwcGx5KHQsIGFyZ3VtZW50cyk7IH0gZnVuY3Rpb24gYSgpIHsgdmFyIGUgPSB0LmJvZHk7IHJldHVybiBlIHx8IChlID0gcyh4ID8gJ3N2ZycgOiAnYm9keScpLCBlLmZha2UgPSAhMCksIGU7IH0gZnVuY3Rpb24gbChlLCBuLCBpLCByKSB7IHZhciBvLCBsLCB1LCBkLCBmID0gJ21vZGVybml6cicsIGMgPSBzKCdkaXYnKSwgcCA9IGEoKTsgaWYgKHBhcnNlSW50KGksIDEwKSkgZm9yICg7aS0tOyl1ID0gcygnZGl2JyksIHUuaWQgPSByID8gcltpXSA6IGYgKyAoaSArIDEpLCBjLmFwcGVuZENoaWxkKHUpOyByZXR1cm4gbyA9IHMoJ3N0eWxlJyksIG8udHlwZSA9ICd0ZXh0L2NzcycsIG8uaWQgPSAncycgKyBmLCAocC5mYWtlID8gcCA6IGMpLmFwcGVuZENoaWxkKG8pLCBwLmFwcGVuZENoaWxkKGMpLCBvLnN0eWxlU2hlZXQgPyBvLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGUgOiBvLmFwcGVuZENoaWxkKHQuY3JlYXRlVGV4dE5vZGUoZSkpLCBjLmlkID0gZiwgcC5mYWtlICYmIChwLnN0eWxlLmJhY2tncm91bmQgPSAnJywgcC5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nLCBkID0gUy5zdHlsZS5vdmVyZmxvdywgUy5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nLCBTLmFwcGVuZENoaWxkKHApKSwgbCA9IG4oYywgZSksIHAuZmFrZSA/IChwLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQocCksIFMuc3R5bGUub3ZlcmZsb3cgPSBkLCBTLm9mZnNldEhlaWdodCkgOiBjLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYyksICEhbDsgfSBmdW5jdGlvbiB1KGUsIHQpIHsgcmV0dXJuICEhfignJyArIGUpLmluZGV4T2YodCk7IH0gZnVuY3Rpb24gZChlKSB7IHJldHVybiBlLnJlcGxhY2UoLyhbQS1aXSkvZywgZnVuY3Rpb24oZSwgdCkgeyByZXR1cm4gJy0nICsgdC50b0xvd2VyQ2FzZSgpOyB9KS5yZXBsYWNlKC9ebXMtLywgJy1tcy0nKTsgfSBmdW5jdGlvbiBmKHQsIGkpIHsgdmFyIHIgPSB0Lmxlbmd0aDsgaWYgKCdDU1MnaW4gZSAmJiAnc3VwcG9ydHMnaW4gZS5DU1MpIHsgZm9yICg7ci0tOykgaWYgKGUuQ1NTLnN1cHBvcnRzKGQodFtyXSksIGkpKSByZXR1cm4gITA7IHJldHVybiAhMTsgfSBpZiAoJ0NTU1N1cHBvcnRzUnVsZSdpbiBlKSB7IGZvciAodmFyIG8gPSBbXTtyLS07KW8ucHVzaCgnKCcgKyBkKHRbcl0pICsgJzonICsgaSArICcpJyk7IHJldHVybiBvID0gby5qb2luKCcgb3IgJyksIGwoJ0BzdXBwb3J0cyAoJyArIG8gKyAnKSB7ICNtb2Rlcm5penIgeyBwb3NpdGlvbjogYWJzb2x1dGU7IH0gfScsIGZ1bmN0aW9uKGUpIHsgcmV0dXJuICdhYnNvbHV0ZScgPT09IGdldENvbXB1dGVkU3R5bGUoZSwgbnVsbCkucG9zaXRpb247IH0pOyB9IHJldHVybiBuOyB9IGZ1bmN0aW9uIGMoZSkgeyByZXR1cm4gZS5yZXBsYWNlKC8oW2Etel0pLShbYS16XSkvZywgZnVuY3Rpb24oZSwgdCwgbikgeyByZXR1cm4gdCArIG4udG9VcHBlckNhc2UoKTsgfSkucmVwbGFjZSgvXi0vLCAnJyk7IH0gZnVuY3Rpb24gcChlLCB0LCByLCBvKSB7IGZ1bmN0aW9uIGEoKSB7IGQgJiYgKGRlbGV0ZSBBLnN0eWxlLCBkZWxldGUgQS5tb2RFbGVtKTsgfSBpZiAobyA9IGkobywgJ3VuZGVmaW5lZCcpID8gITEgOiBvLCAhaShyLCAndW5kZWZpbmVkJykpIHsgdmFyIGwgPSBmKGUsIHIpOyBpZiAoIWkobCwgJ3VuZGVmaW5lZCcpKSByZXR1cm4gbDsgfSBmb3IgKHZhciBkLCBwLCBtLCB2LCBoLCB5ID0gWydtb2Rlcm5penInLCAndHNwYW4nXTshQS5zdHlsZTspZCA9ICEwLCBBLm1vZEVsZW0gPSBzKHkuc2hpZnQoKSksIEEuc3R5bGUgPSBBLm1vZEVsZW0uc3R5bGU7IGZvciAobSA9IGUubGVuZ3RoLCBwID0gMDttID4gcDtwKyspIGlmICh2ID0gZVtwXSwgaCA9IEEuc3R5bGVbdl0sIHUodiwgJy0nKSAmJiAodiA9IGModikpLCBBLnN0eWxlW3ZdICE9PSBuKSB7IGlmIChvIHx8IGkociwgJ3VuZGVmaW5lZCcpKSByZXR1cm4gYSgpLCAncGZ4JyA9PT0gdCA/IHYgOiAhMDsgdHJ5IHsgQS5zdHlsZVt2XSA9IHI7IH0gY2F0Y2ggKGcpIHt9IGlmIChBLnN0eWxlW3ZdICE9PSBoKSByZXR1cm4gYSgpLCAncGZ4JyA9PT0gdCA/IHYgOiAhMDsgfSByZXR1cm4gYSgpLCAhMTsgfSBmdW5jdGlvbiBtKGUsIHQpIHsgcmV0dXJuIGZ1bmN0aW9uKCkgeyByZXR1cm4gZS5hcHBseSh0LCBhcmd1bWVudHMpOyB9OyB9IGZ1bmN0aW9uIHYoZSwgdCwgbikgeyB2YXIgcjsgZm9yICh2YXIgbyBpbiBlKSBpZiAoZVtvXWluIHQpIHJldHVybiBuID09PSAhMSA/IGVbb10gOiAociA9IHRbZVtvXV0sIGkociwgJ2Z1bmN0aW9uJykgPyBtKHIsIG4gfHwgdCkgOiByKTsgcmV0dXJuICExOyB9IGZ1bmN0aW9uIGgoZSwgdCwgbiwgciwgbykgeyB2YXIgcyA9IGUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBlLnNsaWNlKDEpLCBhID0gKGUgKyAnICcgKyBOLmpvaW4ocyArICcgJykgKyBzKS5zcGxpdCgnICcpOyByZXR1cm4gaSh0LCAnc3RyaW5nJykgfHwgaSh0LCAndW5kZWZpbmVkJykgPyBwKGEsIHQsIHIsIG8pIDogKGEgPSAoZSArICcgJyArIGouam9pbihzICsgJyAnKSArIHMpLnNwbGl0KCcgJyksIHYoYSwgdCwgbikpOyB9IGZ1bmN0aW9uIHkoZSwgdCwgaSkgeyByZXR1cm4gaChlLCBuLCBuLCB0LCBpKTsgfSB2YXIgZyA9IFtdLCBiID0ge192ZXJzaW9uOiczLjAuMCcsIF9jb25maWc6e2NsYXNzUHJlZml4OicnLCBlbmFibGVDbGFzc2VzOiEwLCBlbmFibGVKU0NsYXNzOiEwLCB1c2VQcmVmaXhlczohMH0sIF9xOltdLCBvbjogZnVuY3Rpb24oZSwgdCkgeyB2YXIgbiA9IHRoaXM7c2V0VGltZW91dChmdW5jdGlvbigpIHsgdChuW2VdKTsgfSwgMCk7IH0sIGFkZFRlc3Q6IGZ1bmN0aW9uKGUsIHQsIG4pIHsgZy5wdXNoKHtuYW1lOmUsIGZuOnQsIG9wdGlvbnM6bn0pOyB9LCBhZGRBc3luY1Rlc3Q6IGZ1bmN0aW9uKGUpIHsgZy5wdXNoKHtuYW1lOm51bGwsIGZuOmV9KTsgfX0sIE1vZGVybml6ciA9IGZ1bmN0aW9uKCkge307TW9kZXJuaXpyLnByb3RvdHlwZSA9IGIsIE1vZGVybml6ciA9IG5ldyBNb2Rlcm5penI7IHZhciBDID0gW10sIFMgPSB0LmRvY3VtZW50RWxlbWVudCwgeCA9ICdzdmcnID09PSBTLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksIFQgPSBzKCdpbnB1dCcpLCB3ID0gJ3NlYXJjaCB0ZWwgdXJsIGVtYWlsIGRhdGV0aW1lIGRhdGUgbW9udGggd2VlayB0aW1lIGRhdGV0aW1lLWxvY2FsIG51bWJlciByYW5nZSBjb2xvcicuc3BsaXQoJyAnKSwgXyA9IHt9O01vZGVybml6ci5pbnB1dHR5cGVzID0gZnVuY3Rpb24oZSkgeyBmb3IgKHZhciBpLCByLCBvLCBzID0gZS5sZW5ndGgsIGEgPSAnOiknLCBsID0gMDtzID4gbDtsKyspVC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCBpID0gZVtsXSksIG8gPSAndGV4dCcgIT09IFQudHlwZSAmJiAnc3R5bGUnaW4gVCwgbyAmJiAoVC52YWx1ZSA9IGEsIFQuc3R5bGUuY3NzVGV4dCA9ICdwb3NpdGlvbjphYnNvbHV0ZTt2aXNpYmlsaXR5OmhpZGRlbjsnLCAvXnJhbmdlJC8udGVzdChpKSAmJiBULnN0eWxlLldlYmtpdEFwcGVhcmFuY2UgIT09IG4gPyAoUy5hcHBlbmRDaGlsZChUKSwgciA9IHQuZGVmYXVsdFZpZXcsIG8gPSByLmdldENvbXB1dGVkU3R5bGUgJiYgJ3RleHRmaWVsZCcgIT09IHIuZ2V0Q29tcHV0ZWRTdHlsZShULCBudWxsKS5XZWJraXRBcHBlYXJhbmNlICYmIDAgIT09IFQub2Zmc2V0SGVpZ2h0LCBTLnJlbW92ZUNoaWxkKFQpKSA6IC9eKHNlYXJjaHx0ZWwpJC8udGVzdChpKSB8fCAobyA9IC9eKHVybHxlbWFpbHxudW1iZXIpJC8udGVzdChpKSA/IFQuY2hlY2tWYWxpZGl0eSAmJiBULmNoZWNrVmFsaWRpdHkoKSA9PT0gITEgOiBULnZhbHVlICE9PSBhKSksIF9bZVtsXV0gPSAhIW87IHJldHVybiBfOyB9KHcpLCBNb2Rlcm5penIuYWRkVGVzdCgncXVlcnlzZWxlY3RvcicsICdxdWVyeVNlbGVjdG9yJ2luIHQgJiYgJ3F1ZXJ5U2VsZWN0b3JBbGwnaW4gdCk7IHZhciB6ID0gYi5fY29uZmlnLnVzZVByZWZpeGVzID8gJyAtd2Via2l0LSAtbW96LSAtby0gLW1zLSAnLnNwbGl0KCcgJykgOiBbXTtiLl9wcmVmaXhlcyA9IHo7IHZhciBrID0gYi50ZXN0U3R5bGVzID0gbDtNb2Rlcm5penIuYWRkVGVzdCgndG91Y2hldmVudHMnLCBmdW5jdGlvbigpIHsgdmFyIG47IGlmICgnb250b3VjaHN0YXJ0J2luIGUgfHwgZS5Eb2N1bWVudFRvdWNoICYmIHQgaW5zdGFuY2VvZiBEb2N1bWVudFRvdWNoKW4gPSAhMDtlbHNlIHsgdmFyIGkgPSBbJ0BtZWRpYSAoJywgei5qb2luKCd0b3VjaC1lbmFibGVkKSwoJyksICdoZWFydHonLCAnKScsICd7I21vZGVybml6cnt0b3A6OXB4O3Bvc2l0aW9uOmFic29sdXRlfX0nXS5qb2luKCcnKTtrKGksIGZ1bmN0aW9uKGUpIHsgbiA9IDkgPT09IGUub2Zmc2V0VG9wOyB9KTsgfSByZXR1cm4gbjsgfSk7IHZhciBFID0gJ01veiBPIG1zIFdlYmtpdCcsIE4gPSBiLl9jb25maWcudXNlUHJlZml4ZXMgPyBFLnNwbGl0KCcgJykgOiBbXTtiLl9jc3NvbVByZWZpeGVzID0gTjsgdmFyIFAgPSB7ZWxlbTpzKCdtb2Rlcm5penInKX07TW9kZXJuaXpyLl9xLnB1c2goZnVuY3Rpb24oKSB7IGRlbGV0ZSBQLmVsZW07IH0pOyB2YXIgQSA9IHtzdHlsZTpQLmVsZW0uc3R5bGV9O01vZGVybml6ci5fcS51bnNoaWZ0KGZ1bmN0aW9uKCkgeyBkZWxldGUgQS5zdHlsZTsgfSk7IHZhciBqID0gYi5fY29uZmlnLnVzZVByZWZpeGVzID8gRS50b0xvd2VyQ2FzZSgpLnNwbGl0KCcgJykgOiBbXTtiLl9kb21QcmVmaXhlcyA9IGosIGIudGVzdEFsbFByb3BzID0gaCwgYi50ZXN0QWxsUHJvcHMgPSB5LCBNb2Rlcm5penIuYWRkVGVzdCgnY3NzYW5pbWF0aW9ucycsIHkoJ2FuaW1hdGlvbk5hbWUnLCAnYScsICEwKSksIE1vZGVybml6ci5hZGRUZXN0KCdiYWNrZ3JvdW5kc2l6ZScsIHkoJ2JhY2tncm91bmRTaXplJywgJzEwMCUnLCAhMCkpLCBNb2Rlcm5penIuYWRkVGVzdCgnYm9yZGVycmFkaXVzJywgeSgnYm9yZGVyUmFkaXVzJywgJzBweCcsICEwKSksIE1vZGVybml6ci5hZGRUZXN0KCdib3hzaGFkb3cnLCB5KCdib3hTaGFkb3cnLCAnMXB4IDFweCcsICEwKSksIE1vZGVybml6ci5hZGRUZXN0KCdjc3NyZW11bml0JywgZnVuY3Rpb24oKSB7IHZhciBlID0gcygnYScpLnN0eWxlOyB0cnkgeyBlLmZvbnRTaXplID0gJzNyZW0nOyB9IGNhdGNoICh0KSB7fSByZXR1cm4gL3JlbS8udGVzdChlLmZvbnRTaXplKTsgfSksIE1vZGVybml6ci5hZGRUZXN0KCdjc3N0cmFuc2l0aW9ucycsIHkoJ3RyYW5zaXRpb24nLCAnYWxsJywgITApKSwgTW9kZXJuaXpyLmFkZFRlc3QoJ2Zvcm12YWxpZGF0aW9uJywgZnVuY3Rpb24oKSB7IHZhciB0ID0gcygnZm9ybScpOyBpZiAoISgnY2hlY2tWYWxpZGl0eSdpbiB0ICYmICdhZGRFdmVudExpc3RlbmVyJ2luIHQpKSByZXR1cm4gITE7IGlmICgncmVwb3J0VmFsaWRpdHknaW4gdCkgcmV0dXJuICEwOyB2YXIgbiwgaSA9ICExOyByZXR1cm4gTW9kZXJuaXpyLmZvcm12YWxpZGF0aW9uYXBpID0gITAsIHQuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgZnVuY3Rpb24odCkgeyBlLm9wZXJhIHx8IHQucHJldmVudERlZmF1bHQoKSwgdC5zdG9wUHJvcGFnYXRpb24oKTsgfSwgITEpLCB0LmlubmVySFRNTCA9ICc8aW5wdXQgbmFtZT1cIm1vZFRlc3RcIiByZXF1aXJlZD48YnV0dG9uPjwvYnV0dG9uPicsIGsoJyNtb2Rlcm5penIgZm9ybXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LTk5OTk5ZW19JywgZnVuY3Rpb24oZSkgeyBlLmFwcGVuZENoaWxkKHQpLCBuID0gdC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaW5wdXQnKVswXSwgbi5hZGRFdmVudExpc3RlbmVyKCdpbnZhbGlkJywgZnVuY3Rpb24oZSkgeyBpID0gITAsIGUucHJldmVudERlZmF1bHQoKSwgZS5zdG9wUHJvcGFnYXRpb24oKTsgfSwgITEpLCBNb2Rlcm5penIuZm9ybXZhbGlkYXRpb25tZXNzYWdlID0gISFuLnZhbGlkYXRpb25NZXNzYWdlLCB0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdidXR0b24nKVswXS5jbGljaygpOyB9KSwgaTsgfSksIE1vZGVybml6ci5hZGRUZXN0KCdzZXNzaW9uc3RvcmFnZScsIGZ1bmN0aW9uKCkgeyB2YXIgZSA9ICdtb2Rlcm5penInOyB0cnkgeyByZXR1cm4gc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShlLCBlKSwgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShlKSwgITA7IH0gY2F0Y2ggKHQpIHsgcmV0dXJuICExOyB9IH0pLCByKCksIG8oQyksIGRlbGV0ZSBiLmFkZFRlc3QsIGRlbGV0ZSBiLmFkZEFzeW5jVGVzdDsgZm9yICh2YXIgcSA9IDA7cSA8IE1vZGVybml6ci5fcS5sZW5ndGg7cSsrKU1vZGVybml6ci5fcVtxXSgpO2UuTW9kZXJuaXpyID0gTW9kZXJuaXpyOyB9KHdpbmRvdywgZG9jdW1lbnQpO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2pzL2hlYWQvbW9kZXJuaXpyLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==